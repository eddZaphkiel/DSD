|sincrono
CLK => divisor:U_DIV.clk_in
D[0] => T_flip_flop:TFF0.T
D[1] => T_flip_flop:TFF1.T
Q[0] << T_flip_flop:TFF0.Q0
Q[1] << T_flip_flop:TFF1.Q0


|sincrono|divisor:U_DIV
clk_in => clk_reg.CLK
clk_in => count[0].CLK
clk_in => count[1].CLK
clk_in => count[2].CLK
clk_in => count[3].CLK
clk_in => count[4].CLK
clk_in => count[5].CLK
clk_in => count[6].CLK
clk_in => count[7].CLK
clk_in => count[8].CLK
clk_in => count[9].CLK
clk_in => count[10].CLK
clk_in => count[11].CLK
clk_in => count[12].CLK
clk_in => count[13].CLK
clk_in => count[14].CLK
clk_in => count[15].CLK
clk_in => count[16].CLK
clk_in => count[17].CLK
clk_in => count[18].CLK
clk_in => count[19].CLK
clk_in => count[20].CLK
clk_in => count[21].CLK
clk_in => count[22].CLK
clk_in => count[23].CLK
clk_in => count[24].CLK
clk_out <= clk_reg.DB_MAX_OUTPUT_PORT_TYPE


|sincrono|T_flip_flop:TFF0
T => Q_int.ENA
CLK => Q_int.CLK
Q0 <= Q_int.DB_MAX_OUTPUT_PORT_TYPE


|sincrono|T_flip_flop:TFF1
T => Q_int.ENA
CLK => Q_int.CLK
Q0 <= Q_int.DB_MAX_OUTPUT_PORT_TYPE


